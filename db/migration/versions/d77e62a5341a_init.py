"""init

Revision ID: d77e62a5341a
Revises: 
Create Date: 2023-06-14 18:57:45.512811

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd77e62a5341a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    grade_type_table = op.create_table('grade_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.VARCHAR(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.bulk_insert(grade_type_table, [
        {'id': 1, 'type': 'Trainee'},
        {'id': 2, 'type': 'Junior'},
        {'id': 3, 'type': 'Middle'},
        {'id': 4, 'type': 'Senior'},
    ])
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DATE(), nullable=True),
    sa.Column('updated_at', sa.DATE(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    work_type_table = op.create_table('work_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.VARCHAR(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.bulk_insert(work_type_table, [
        {'id': 1, 'type': 'Remote'},
        {'id': 2, 'type': 'Part-time'},
        {'id': 3, 'type': 'Full-time'},
    ])
    op.create_table('profiles',
    sa.Column('firstname', sa.VARCHAR(length=32), nullable=True),
    sa.Column('lastname', sa.VARCHAR(length=32), nullable=True),
    sa.Column('email', sa.String(length=255), server_default=sa.text("''"), nullable=True),
    sa.Column('professional_role', sa.VARCHAR(length=32), nullable=True),
    sa.Column('work_type_id', sa.Integer(), nullable=True),
    sa.Column('grade_type_id', sa.Integer(), nullable=True),
    sa.Column('region', sa.VARCHAR(length=32), nullable=True),
    sa.Column('salary_from', sa.Integer(), nullable=True),
    sa.Column('salary_to', sa.Integer(), nullable=True),
    sa.Column('ready_for_relocation', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DATE(), nullable=True),
    sa.Column('updated_at', sa.DATE(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['grade_type_id'], ['grade_types.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['work_type_id'], ['work_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('profiles')
    op.drop_table('work_types')
    op.drop_table('users')
    op.drop_table('grade_types')
    # ### end Alembic commands ###
